(root source.css
    (include @comment-block)
    (include @selector)
    (zone meta.at-rule.charset.css
        (start
            (regex [\s*((@)charset\b)\s*]
                (1 keyword.control.at-rule.charset.css)
                (2 punctuation.definition.keyword.css)))
        (end
            (regex [\s*((?=;|$))]
                (1 keyword.control.at-rule.charset.css)
                (2 punctuation.definition.keyword.css)))
        (subzones
            (include @string-double)
            (include @string-single)))
    (zone meta.at-rule.import.css
        (start
            (regex [\s*((@)import\b)\s*]
                (1 keyword.control.at-rule.import.css)
                (2 punctuation.definition.keyword.css)))
        (end
            (regex [\s*((?=;|\}))]
                (1 keyword.control.at-rule.import.css)
                (2 punctuation.definition.keyword.css)))
        (subzones
            (include @string-double)
            (include @string-single)
            (zone
                (start
                    (regex [\s*(url)\s*(\()\s*]
                        (1 support.function.url.css)
                        (2 punctuation.section.function.css)))
                (end
                    (regex [\s*(\))\s*]
                        (1 punctuation.section.function.css)))
                (subzones
                    (zone variable.parameter.url.css
                        (match
                            (regex [[^'") \t]+])))
                    (include @string-single)
                    (include @string-double)))
            (include @media-query-list)))
    (zone meta.at-rule.font-face.css
        (start
            (regex [^\s*((@)font-face)\s*(?=\{)]
                (1 keyword.control.at-rule.font-face.css)
                (2 punctuation.definition.keyword.css)))
        (end
            (regex [\s*(\})]
                (1 punctuation.section.property-list.css)))
        (subzones
            (include @rule-list)))
    (zone
        (start
            (regex [(?=^\s*@media\s*.*?\{)]))
        (end
            (regex [\s*(\})]
                (1 punctuation.section.property-list.css)))
        (subzones
            (zone meta.at-rule.media.css
                (start
                    (regex [^\s*((@)media)(?=.*?\{)]
                        (3 support.constant.media.css)
                        (1 keyword.control.at-rule.media.css)
                        (2 punctuation.definition.keyword.css)))
                (end
                    (regex [\s*(?=\{)]))
                (subzones
                    (include @media-query-list)))
            (zone
                (start
                    (regex [\s*(\{)]
                        (1 punctuation.section.property-list.css)))
                (end
                    (regex [(?=\})]))
                (subzones
                    (include $self)))))
    (zone
        (start
            (regex [(?=\{)]))
        (end
            (regex [(\})]
                (1 punctuation.section.property-list.css)))
        (subzones
            (include @rule-list))))

(collection numeric-values
    (zone constant.other.color.rgb-value.css
        (match
            (regex [(#)([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\b]
                (1 punctuation.definition.constant.css))))
    (zone constant.numeric.css
        (match
            (regex [(?x)
					    (?:-|\+)?(?:(?:[0-9]+(?:\.[0-9]+)?)|(?:\.[0-9]+))
					    ((?:px|pt|ch|cm|mm|in|r?em|ex|pc|deg|g?rad|dpi|dpcm|s)\b|%)?
					]
                (1 keyword.other.unit.css)))))

(collection property-values
    (zone support.constant.property-value.css
        (match
            (regex [\b(absolute|all(-scroll)?|always|armenian|auto|avoid|baseline|below|bidi-override|block|bold|bolder|both|bottom|break-all|break-word|capitalize|center|char|circle|cjk-ideographic|col-resize|collapse|crosshair|dashed|decimal-leading-zero|decimal|default|disabled|disc|distribute-all-lines|distribute-letter|distribute-space|distribute|dotted|double|e-resize|ellipsis|fixed|geometricPrecision|georgian|groove|hand|hebrew|help|hidden|hiragana-iroha|hiragana|horizontal|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space|inactive|inherit|inline-block|inline|inset|inside|inter-ideograph|inter-word|italic|justify|katakana-iroha|katakana|keep-all|left|lighter|line-edge|line-through|line|list-item|loose|lower-alpha|lower-greek|lower-latin|lower-roman|lowercase|lr-tb|ltr|medium|middle|move|n-resize|ne-resize|newspaper|no-drop|no-repeat|nw-resize|none|normal|not-allowed|nowrap|oblique|optimize(Legibility|Quality|Speed)|outset|outside|overline|pointer|pre(-(wrap|line))?|progress|relative|repeat-x|repeat-y|repeat|right|ridge|row-resize|rtl|s-resize|scroll|se-resize|separate|small-caps|solid|square|static|strict|sub|super|sw-resize|table-footer-group|table-header-group|tb-rl|text-bottom|text-top|text|thick|thin|top|transparent|underline|upper-alpha|upper-latin|upper-roman|uppercase|vertical(-(ideographic|text))?|visible(Painted|Fill|Stroke)?|w-resize|wait|whitespace|zero|smaller|larger|((xx?-)?(small|large))|painted|fill|stroke)\b])))
    (zone support.constant.font-name.css
        (match
            (regex [(\b(?i:arial|century|comic|courier|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace)\b)])))
    (include @numeric-values)
    (include @color-values)
    (include @string-double)
    (include @string-single)
    (zone
        (start
            (regex [(rect)\s*(\()]
                (1 support.function.misc.css)
                (2 punctuation.section.function.css)))
        (end
            (regex [(\))]
                (1 punctuation.section.function.css)))
        (subzones
            (include @numeric-values)))
    (zone
        (start
            (regex [(format|local|url|attr|counter|counters)\s*(\()]
                (1 support.function.misc.css)
                (2 punctuation.section.function.css)))
        (end
            (regex [(\))]
                (1 punctuation.section.function.css)))
        (subzones
            (include @string-single)
            (include @string-double)
            (zone variable.parameter.misc.css
                (match
                    (regex [[^'") \t]+])))))
    (zone keyword.other.important.css
        (match
            (regex \!\s*important))))

(collection selector
    (zone meta.selector.css
        (start
            (regex [\s*(?=[:.*#a-zA-Z])]))
        (end
            (regex [(?=[/@{)])]))
        (subzones
            (zone entity.name.tag.css
                (match
                    (regex [\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\b])))
            (zone entity.other.attribute-name.class.css
                (match
                    (regex [(\.)[a-zA-Z0-9_-]+]
                        (1 punctuation.definition.entity.css))))
            (zone entity.other.attribute-name.id.css
                (match
                    (regex [(#)[a-zA-Z][a-zA-Z0-9_-]*]
                        (1 punctuation.definition.entity.css))))
            (zone entity.name.tag.wildcard.css
                (match
                    (regex \*)))
            (zone entity.other.attribute-name.pseudo-element.css
                (match
                    (regex [(:+)(after|before|first-letter|first-line|selection)\b]
                        (1 punctuation.definition.entity.css))))
            (zone entity.other.attribute-name.pseudo-class.css
                (match
                    (regex [(:)((first|last)-child|(first|last|only)-of-type|empty|root|target|first|left|right)\b]
                        (1 punctuation.definition.entity.css))))
            (zone entity.other.attribute-name.pseudo-class.ui-state.css
                (match
                    (regex [(:)(checked|enabled|default|disabled|indeterminate|invalid|optional|required|valid)\b]
                        (1 punctuation.definition.entity.css))))
            (zone
                (start
                    (regex [((:)not)(\()]
                        (3 punctuation.section.function.css)
                        (1 entity.other.attribute-name.pseudo-class.css)
                        (2 punctuation.definition.entity.css)))
                (end
                    (regex [\)]
                        (0 punctuation.section.function.css)))
                (subzones
                    (include @selector)))
            (zone
                (match
                    (regex [((:)nth-(?:(?:last-)?child|(?:last-)?of-type))(\()(\-?(?:\d+n?|n)(?:\+\d+)?|even|odd)(\))]
                        (3 punctuation.section.function.css)
                        (4 constant.numeric.css)
                        (5 punctuation.section.function.css)
                        (1 entity.other.attribute-name.pseudo-class.css)
                        (2 punctuation.definition.entity.css))))
            (zone entity.other.attribute-name.pseudo-class.css
                (match
                    (regex [(:)(active|hover|link|visited|focus)\b]
                        (1 punctuation.definition.entity.css))))
            (zone meta.attribute-selector.css
                (match
                    (regex [(?i)(\[)\s*(-?[_a-z\\[[:^ascii:]]][_a-z0-9\-\\[[:^ascii:]]]*)(?:\s*([~|^$*]?=)\s*(?:(-?[_a-z\\[[:^ascii:]]][_a-z0-9\-\\[[:^ascii:]]]*)|((?>(['"])(?:[^\\]|\\.)*?(\6)))))?\s*(\])]
                        (7 punctuation.definition.string.end.css)
                        (3 punctuation.separator.operator.css)
                        (4 string.unquoted.attribute-value.css)
                        (5 string.quoted.double.attribute-value.css)
                        (1 punctuation.definition.entity.css)
                        (6 punctuation.definition.string.begin.css)
                        (2 entity.other.attribute-name.attribute.css)))))))

(collection media-query-list
    (zone
        (start
            (regex [\s*(?=[^{;])]))
        (end
            (regex [\s*(?=[{;])]))
        (subzones
            (include @media-query))))

(collection string-double
    (zone string.quoted.double.css
        (start
            (regex "
                (0 punctuation.definition.string.begin.css)))
        (end
            (regex "
                (0 punctuation.definition.string.end.css)))
        (subzones
            (zone constant.character.escape.css
                (match
                    (regex \\.))))))

(collection string-single
    (zone string.quoted.single.css
        (start
            (regex '
                (0 punctuation.definition.string.begin.css)))
        (end
            (regex '
                (0 punctuation.definition.string.end.css)))
        (subzones
            (zone constant.character.escape.css
                (match
                    (regex \\.))))))

(collection media-query
    (zone
        (start
            (regex [(?i)\s*(only|not)?\s*(all|aural|braille|embossed|handheld|print|projection|screen|tty|tv)?]
                (1 keyword.operator.logic.media.css)
                (2 support.constant.media.css)))
        (end
            (regex [\s*(?:(,)|(?=[{;]))]
                (1 punctuation.definition.arbitrary-repitition.css)))
        (subzones
            (zone
                (start
                    (regex [\s*(and)?\s*(\()\s*]
                        (1 keyword.operator.logic.media.css)))
                (end
                    (regex [\)]))
                (subzones
                    (zone
                        (start
                            (regex [(?x)
	                            (
	                                ((min|max)-)?
	                                (
	                                    ((device-)?(height|width|aspect-ratio))|
	                                    (color(-index)?)|monochrome|resolution
	                                )
	                            )|grid|scan|orientation
	                            \s*(?=[:)])]
                                (0 support.type.property-name.media.css)))
                        (end
                            (regex [(:)|(?=\))]
                                (1 punctuation.separator.key-value.css))))
                    (zone support.constant.property-value.css
                        (match
                            (list portrait landscape progressive interlace)
                            (boundary.left)))
                    (zone
                        (match
                            (regex [\s*(\d+)(/)(\d+)]
                                (3 constant.numeric.css)
                                (1 constant.numeric.css)
                                (2 keyword.operator.arithmetic.css))))
                    (include @numeric-values))))))

(collection color-values
    (zone support.constant.color.w3c-standard-color-name.css
        (match
            (list aqua black blue fuchsia gray green lime maroon navy olive orange purple red silver teal white yellow)
            (boundary.both)))
    (zone invalid.deprecated.color.w3c-non-standard-color-name.css
        (match
            (list aliceblue antiquewhite aquamarine azure beige bisque blanchedalmond blueviolet brown burlywood cadetblue chartreuse chocolate coral cornflowerblue cornsilk crimson cyan darkblue darkcyan darkgoldenrod darkgray darkgreen darkgrey darkkhaki darkmagenta darkolivegreen darkorange darkorchid darkred darksalmon darkseagreen darkslateblue darkslategray darkslategrey darkturquoise darkviolet deeppink deepskyblue dimgray dimgrey dodgerblue firebrick floralwhite forestgreen gainsboro ghostwhite gold goldenrod greenyellow grey honeydew hotpink indianred indigo ivory khaki lavender lavenderblush lawngreen lemonchiffon lightblue lightcoral lightcyan lightgoldenrodyellow lightgray lightgreen lightgrey lightpink lightsalmon lightseagreen lightskyblue lightslategray lightslategrey lightsteelblue lightyellow limegreen linen magenta mediumaquamarine mediumblue mediumorchid mediumpurple mediumseagreen mediumslateblue mediumspringgreen mediumturquoise mediumvioletred midnightblue mintcream mistyrose moccasin navajowhite oldlace olivedrab orangered orchid palegoldenrod palegreen paleturquoise palevioletred papayawhip peachpuff peru pink plum powderblue rosybrown royalblue saddlebrown salmon sandybrown seagreen seashell sienna skyblue slateblue slategray slategrey snow springgreen steelblue tan thistle tomato turquoise violet wheat whitesmoke yellowgreen)
            (boundary.both)))
    (zone
        (start
            (regex [(hsla?|rgba?)\s*(\()]
                (1 support.function.misc.css)
                (2 punctuation.section.function.css)))
        (end
            (regex [(\))]
                (1 punctuation.section.function.css)))
        (subzones
            (zone constant.other.color.rgb-value.css
                (match
                    (regex [(?x)\b
							    (0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5])))\s*,\s*){2}
							    (0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5])))\b)
							    (\s*,\s*((0?\.[0-9]+)|[0-1]))?
							])))
            (zone constant.other.color.rgb-percentage.css
                (match
                    (regex [\b([0-9]{1,2}|100)\s*%,\s*([0-9]{1,2}|100)\s*%,\s*([0-9]{1,2}|100)\s*%])))
            (include @numeric-values))))

(collection rule-list
    (zone meta.property-list.css
        (start
            (regex [\{]
                (0 punctuation.section.property-list.css)))
        (end
            (regex [(?=\s*\})]))
        (subzones
            (include @comment-block)
            (zone meta.property-name.css
                (start
                    (regex [(?<![-a-z])(?=[-a-z])]))
                (end
                    (regex [$|(?![-a-z])]))
                (subzones
                    (zone support.type.property-name.css
                        (match
                            (regex [\b(azimuth|background-attachment|background-color|background-image|background-position|background-repeat|background|box-shadow|border-radius|border-bottom-color|border-bottom-style|border-bottom-width|border-bottom|border-collapse|border-color|border-left-color|border-left-style|border-left-width|border-left|border-right-color|border-right-style|border-right-width|border-right|border-spacing|border-style|border-top-color|border-top-style|border-top-width|border-top|border-width|border|bottom|caption-side|clear|clip|color|content|counter-increment|counter-reset|cue-after|cue-before|cue|cursor|direction|display|elevation|empty-cells|float|font-family|font-size-adjust|font-size|font-stretch|font-style|font-variant|font-weight|font|height|image-rendering|left|letter-spacing|line-height|list-style-image|list-style-position|list-style-type|list-style|margin-bottom|margin-left|margin-right|margin-top|marker-offset|margin|marks|max-height|max-width|min-height|min-width|-moz-border-radius|opacity|orphans|outline-color|outline-style|outline-width|outline|overflow(-[xy])?|padding-bottom|padding-left|padding-right|padding-top|padding|page-break-after|page-break-before|page-break-inside|page|pause-after|pause-before|pause|pitch-range|pitch|play-during|pointer-events|position|quotes|resize|richness|right|size|speak-header|speak-numeral|speak-punctuation|speech-rate|speak|src|stress|table-layout|text-(align|decoration|indent|rendering|shadow|transform)|top|unicode-bidi|vertical-align|visibility|voice-family|volume|white-space|widows|width|word-(spacing|wrap)|zoom|z-index)\b])))))
            (zone meta.property-value.css
                (start
                    (regex [(:)\s*]
                        (1 punctuation.separator.key-value.css)))
                (end
                    (regex [\s*(;|(?=\}))]
                        (1 punctuation.terminator.rule.css)))
                (subzones
                    (include @property-values))))))

(collection comment-block
    (zone comment.block.css
        (start
            (regex /\*
                (0 punctuation.definition.comment.css)))
        (end
            (regex \*/
                (0 punctuation.definition.comment.css)))))